services:
  traefik:
    image: traefik:v3.3
    container_name: "traefik"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}
    depends_on:
      - docker-socket
    command:
      - "--certificatesresolvers.cloudflare.acme.email=${EMAIL}"
    volumes:
      - ../config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - /mnt/data/letsencrypt:/etc/traefik/certs:rw
    networks:
      reverse-proxy:
        ipv4_address: 172.30.255.254
      socket-proxy:
        ipv4_address: 172.31.255.253
    restart: unless-stopped
  docker-socket:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: docker-socket
    environment:
      - ALLOW_START=0
      - ALLOW_STOP=0
      - ALLOW_RESTARTS=0
      - AUTH=0
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1
      - DISABLE_IPV6=0
      - DISTRIBUTION=0
      - EVENTS=1
      - EXEC=0
      - IMAGES=0
      - INFO=1
      - NETWORKS=0
      - NODES=0
      - PING=0
      - PLUGINS=0
      - POST=0
      - PROXY_READ_TIMEOUT=240
      - SECRETS=0
      - SERVICES=0
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=0
      - VERSION=1
      - VOLUMES=0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      socket-proxy:
        ipv4_address: 172.31.255.254
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /run
networks:
  reverse-proxy:
    name: "reverse-proxy"
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16
    attachable: true
  socket-proxy:
    name: "socket-proxy"
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
    attachable: true
    internal: true
