services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    user: "1000:1000"
    security_opt:
      - no-new-privileges=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.rule=Host(`vault.${DOMAIN}`)"
      - "traefik.http.routers.vaultwarden.tls=true"
      - "traefik.http.routers.vaultwarden.tls.certresolver=cloudflare"
      - "traefik.http.routers.vaultwarden.service=vaultwarden"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
      - "traefik.http.services.vaultwarden.loadbalancer.passHostHeader=true"
      - "traefik.docker.network=reverse-proxy"
    secrets:
      - VAULTWARDEN_ADMIN_TOKEN
      - VAULTWARDEN_POSTGRES_PASSWORD
    environment:
      - DOMAIN=https://vault.${DOMAIN}
      - ADMIN_TOKEN_FILE=/run/secrets/VAULTWARDEN_ADMIN_TOKEN
      - SIGNUPS_ALLOWED=true
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURITY=force_tls
      - SMTP_FROM=${SMTP_FROM}@${SMTP_FROM_DOMAIN}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - LOG_FILE=/var/log/vaultwarden/vaultwarden.log
    volumes:
      - vaultwarden-data:/data:rw
      - vaultwarden-logs:/var/log/vaultwarden:rw
      - ../scripts/vaultwarden-entrypoint.sh:/entrypoint.sh:ro
    networks:
      - reverse-proxy
      - vaultwarden-internal
    depends_on:
      vaultwarden-init:
        condition: service_completed_successfully
      vaultwarden-db:
        condition: service_healthy
  vaultwarden-init:
    image: busybox
    volumes:
      - vaultwarden-logs:/var/log/vaultwarden
    command: chown -R 1000:1000 /var/log/vaultwarden
    network_mode: none
  vaultwarden-db-init:
    image: postgres:latest
    container_name: vaultwarden-db-init
    security_opt:
      - no-new-privileges=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - vaultwarden-db-data:/var/lib/postgresql/data:rw
    entrypoint:
      - sh
      - -c
      - |
        chown -R 1000:1000 /var/lib/postgresql/data
    network_mode: none
  vaultwarden-db:
    image: postgres:latest
    container_name: vaultwarden-db
    hostname: vaultwarden-db
    restart: unless-stopped
    user: "1000:1000"
    security_opt:
      - no-new-privileges=true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vaultwarden -d vaultwarden"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - VAULTWARDEN_POSTGRES_PASSWORD
    environment:
      - POSTGRES_USER=vaultwarden
      - POSTGRES_PASSWORD_FILE=/run/secrets/VAULTWARDEN_POSTGRES_PASSWORD
      - POSTGRES_DB=vaultwarden
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - vaultwarden-db-data:/var/lib/postgresql/data:rw
    networks:
      - vaultwarden-internal
    depends_on:
      vaultwarden-db-init:
        condition: service_completed_successfully
secrets:
  VAULTWARDEN_ADMIN_TOKEN:
    file: ../.docker/secrets/VAULTWARDEN_ADMIN_TOKEN
  VAULTWARDEN_POSTGRES_PASSWORD:
    file: ../.docker/secrets/VAULTWARDEN_POSTGRES_PASSWORD
volumes:
  vaultwarden-data:
  vaultwarden-logs:
  vaultwarden-db-data:
