services:
  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    user: "1000:1000"
    security_opt:
      - no-new-privileges=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=cloudflare"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.services.nextcloud.loadbalancer.passHostHeader=true"
      - "traefik.docker.network=reverse-proxy"
    secrets:
      - NEXTCLOUD_ADMIN_PASSWORD
      - NEXTCLOUD_REDIS_HOST_PASSWORD
      - NEXTCLOUD_POSTGRES_PASSWORD
    env_file:
      - ../config/nextcloud.env
    volumes:
      - nextcloud-data:/var/www/html:rw
      - nextcloud-logs:/var/log/nextcloud:rw
      - ../scripts/nextcloud-post-installation.sh:/docker-entrypoint-hooks.d/post-installation/nextcloud-post-installation.sh:ro
      # https://github.com/nextcloud/docker/issues/1494
      - ../.docker/remoteip.conf:/etc/apache2/conf-enabled/remoteip.conf:ro
      # https://github.com/nextcloud/docker/issues/763
      - ../.docker/redis-session.ini:/usr/local/etc/php/conf.d/redis-session.ini:rw
    networks:
      - reverse-proxy
      - nextcloud-internal
    depends_on:
      nextcloud-db:
        condition: service_healthy
      nextcloud-redis:
        condition: service_started
  nextcloud-db-init:
    image: postgres:latest
    container_name: nextcloud-db
    security_opt:
      - no-new-privileges=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - nextcloud-db-data:/var/lib/postgresql/data:rw
    entrypoint:
      - sh
      - -c
      - |
        chown -R 1000:1000 /var/lib/postgresql/data
  nextcloud-db:
    image: postgres:latest
    container_name: nextcloud-db
    hostname: nextcloud-db
    restart: unless-stopped
    user: "1000:1000"
    security_opt:
      - no-new-privileges=true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextcloud -d nextcloud"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - NEXTCLOUD_POSTGRES_PASSWORD
    environment:
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD_FILE=/run/secrets/NEXTCLOUD_POSTGRES_PASSWORD
      - POSTGRES_DB=nextcloud
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - nextcloud-db-data:/var/lib/postgresql/data:rw
    networks:
      - nextcloud-internal
    depends_on:
      nextcloud-db-init:
        condition: service_completed_successfully
  nextcloud-redis:
    image: redis:latest
    container_name: nextcloud-redis
    hostname: redis
    restart: unless-stopped
    user: "1000:1000"
    security_opt:
      - no-new-privileges=true
    secrets:
      - NEXTCLOUD_REDIS_HOST_PASSWORD
    volumes:
      - nextcloud-redis-data:/data
    networks:
      - nextcloud-internal
    command: bash -c 'redis-server --requirepass "$$(cat /run/secrets/NEXTCLOUD_REDIS_HOST_PASSWORD)"'
  nextcloud-cron:
    image: nextcloud:latest
    container_name: nextcloud-cron
    restart: unless-stopped
    user: "1000:1000"
    security_opt:
      - no-new-privileges=true
    secrets:
      - NEXTCLOUD_ADMIN_PASSWORD
      - NEXTCLOUD_REDIS_HOST_PASSWORD
      - NEXTCLOUD_POSTGRES_PASSWORD
    env_file:
      - ../config/nextcloud.env
    volumes:
      - nextcloud-data:/var/www/html:rw
    entrypoint: /cron.sh
    networks:
      - nextcloud-internal
    depends_on:
      nextcloud:
        condition: service_started
secrets:
  NEXTCLOUD_ADMIN_PASSWORD:
    file: ../.docker/secrets/NEXTCLOUD_ADMIN_PASSWORD
  NEXTCLOUD_POSTGRES_PASSWORD:
    file: ../.docker/secrets/NEXTCLOUD_POSTGRES_PASSWORD
  NEXTCLOUD_REDIS_HOST_PASSWORD:
    file: ../.docker/secrets/NEXTCLOUD_REDIS_HOST_PASSWORD
volumes:
  nextcloud-data:
  nextcloud-logs:
  nextcloud-db-data:
  nextcloud-redis-data:
