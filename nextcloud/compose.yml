services:
  nextcloud-init:
    image: busybox:latest
    container_name: nextcloud-init
    restart: no
    volumes:
      - nextcloud-logs:/var/log/nextcloud:rw
    network_mode: none
    command: sh -c "chown -R www-data:www-data /var/log/nextcloud"
  nextcloud-app:
    image: nextcloud:latest
    container_name: nextcloud-app
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.tls.certresolver=cloudflare"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.services.nextcloud.loadbalancer.passHostHeader=true"
      - "traefik.docker.network=reverse-proxy"
    secrets:
      - NEXTCLOUD_ADMIN_PASSWORD
      - NEXTCLOUD_REDIS_HOST_PASSWORD
      - NEXTCLOUD_POSTGRES_PASSWORD
    env_file:
      - ./config.env
    volumes:
      - nextcloud-app:/var/www/html:rw
      - nextcloud-logs:/var/log/nextcloud:rw
      - ./nextcloud-post-installation.sh:/docker-entrypoint-hooks.d/post-installation/nextcloud-post-installation.sh:ro
    networks:
      - reverse-proxy
      - nextcloud-internal
    depends_on:
      nextcloud-init:
        condition: service_completed_successfully
      nextcloud-db:
        condition: service_healthy
      nextcloud-redis:
        condition: service_healthy
  nextcloud-db:
    image: postgres:latest
    container_name: nextcloud-db
    hostname: nextcloud-db
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextcloud -d nextcloud"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - NEXTCLOUD_POSTGRES_PASSWORD
    environment:
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD_FILE=/run/secrets/NEXTCLOUD_POSTGRES_PASSWORD
      - POSTGRES_DB=nextcloud
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - nextcloud-db:/var/lib/postgresql/data:rw
    networks:
      - nextcloud-internal
  nextcloud-redis:
    image: redis:latest
    container_name: nextcloud-redis
    hostname: redis
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    secrets:
      - NEXTCLOUD_REDIS_HOST_PASSWORD
    volumes:
      - nextcloud-redis:/data
    networks:
      - nextcloud-internal
    command: bash -c 'redis-server --requirepass "$$(cat /run/secrets/NEXTCLOUD_REDIS_HOST_PASSWORD)"'
  nextcloud-cron:
    image: nextcloud:latest
    container_name: nextcloud-cron
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    secrets:
      - NEXTCLOUD_ADMIN_PASSWORD
      - NEXTCLOUD_REDIS_HOST_PASSWORD
      - NEXTCLOUD_POSTGRES_PASSWORD
    env_file:
      - config.env
    volumes:
      - nextcloud-app:/var/www/html:rw
    entrypoint: /cron.sh
    networks:
      - nextcloud-internal
    depends_on:
      nextcloud-app:
        condition: service_started
